name: 'Poetry Setup'
description: 'Setup Poetry environment'

inputs:
  dependency-groups:
    description: 'Dependency groups to install separated by comma'
    required: true
    type: string

runs:
  using: composite
  steps:
    - name: Set Environment
      id: poetry
      uses: ./.github/actions/python/poetry/set-env
      with:
        dependency-groups: ${{ inputs.dependency-groups }}

    - name: Restore Poetry Registry
      id: poetry-registry
      uses: ./.github/actions/registry/restore
      with:
        path: ${{ steps.poetry.outputs.cache-dir }}
        key: ${{ steps.poetry.outputs.registry-key }}

    - name: Install dependencies
      if: ${{ steps.poetry-registry.outputs.cache-hit != 'true' }}
      working-directory: ${{ env.POETRY_PROJECT_PATH }}
      shell: bash
      env:
        POETRY_CACHE_DIR: ${{ steps.poetry-registry.outputs.path }}
        DEPENDENCY_GROUPS: ${{ steps.poetry.outputs.dependency-groups }}
      run: poetry install --only=$DEPENDENCY_GROUPS

    - name: Save Poetry Registry
      if: ${{ steps.poetry-registry.outputs.cache-hit != 'true' }}
      uses: ./.github/actions/registry/save
      with:  
        path: ${{ steps.poetry.outputs.cache-dir }}
        key: ${{ steps.poetry.outputs.registry-key }}

    - name: Check Installed Python Version
      working-directory: ${{ env.POETRY_PROJECT_PATH }}
      shell: bash
      run: |
        INSTALLED_PYTHON_VERSION=$(poetry run python --version)
        echo "✅ Installed Python Version: $INSTALLED_PYTHON_VERSION"
        if [[ $INSTALLED_PYTHON_VERSION == *"${{ env.PYTHON_VERSION }}"* ]]; then
          echo "✅ Installed Python Version matches PYTHON_VERSION"
        else
          echo "❌ Error: Installed Python Version does not match PYTHON_VERSION"
          echo "Installed python version:"
          exit 1
        fi

    - name: Finalize
      shell: bash
      run: |
        echo "✅ Poetry registry to registry key: ${{ steps.poetry-registry.outputs.key }}"
        echo "POETRY_CACHE_DIR=${{ steps.poetry-registry.outputs.path }}" >> $GITHUB_ENV