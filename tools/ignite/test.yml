container:
  workspace:
    name: my-workspace
    folder: /workspace
    volume-name: my-workspace-volume
  runtime:
    user: vscode
    env:
      - key: MY_KEY
      - key: MY_KEY
        type: container
        value: MY_VALUE
      - key: MY_KEY
        type: remote
        value: MY_VALUE
      - key: MY_KEY
        type: container
      - key: MY_KEY
        type: remote
      - key: MY_KEY
        value: MY_VALUE
      - key: MY_KEY
        value: MY_VALUE
    mounts:
      - source: /host/path
        target: /container/path
        type: bind
        options: ro
  expose: 
    socket: 
      host: /tmp/container.sock
      container: /container/socket
  build:
    container-file: ../Containerfile
    context: ..
    target: development
  network: 
    name: host
  extensions:
    vscode: 
      - ms-python.python
      - ms-python.vscode-pylance
      - ms-python.black-formatter
      - ms-python.pylint
      - ms-python.flake8
      - ms-python.isort
      - ms-python.poetry
      - ms-python.pytest
      - ms-python.testing
      - ms-python.coverage-gutters
      - ameenahsanma.poetry-monorepo

workspace:
  policies:
    container:
      backend: podman
    folder:
      create: always
    file:
      write: overwrite
  projects:
    ref:
      vscode:
        settings:
          - python:
            - exclude-files
            - pylance
            - poetry
            - black
            - isort
    root:
      vscode:
        settings:
          - on-save
          - coverage-gutters
    my-project-1:
      alias: MyProject1
      path: /workspace/projects/
      vscode:
        settings:
          - python:
            - $ref
            - isort-black
            - flake8
        tasks:
          - poetry:
            - $all
    my-project-2:
      alias: MyProject2
      path: /workspace/projects/
      vscode:
        settings:
          - python:
            - $ref
            - pylint
        tasks:
          - poetry:
            - $all
